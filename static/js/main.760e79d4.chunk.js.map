{"version":3,"sources":["fBase.js","ApiKeys.js","routes/Answer.js","routes/Auth.js","routes/Home.js","routes/Profile.js","components/Routes.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","authService","auth","dbService","firestore","storage","Apikeys","USER_ID","SERVICE_ID","TEMPLATE_ID","Answer","useParams","id","questionid","useState","questionInfo","setQuestionInfo","newAnswer","setNewAnswer","instaID","setInstaID","nickname","setNickname","isLoading","setIsLoading","onSubmit","e","a","preventDefault","prevArray","answerArray","newAnswerObj","answerContent","collection","doc","question","update","then","alert","emailjs","sendForm","target","result","console","log","catch","error","text","onChange","name","value","getQuestion","where","get","querySnapshot","forEach","data","useEffect","className","type","placeholder","required","htmlFor","Auth","email","setEmail","password","setPassword","newAccount","setNewAccount","setError","event","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","onClick","prev","Home","Profile","userAuth","history","useHistory","setQuestion","questions","setQuestions","selection","setSelection","questionObj","uuidv4","registered_dttm","Date","now","updated_dttm","set","getQuestions","onSnapshot","snapshot","questionsData","docs","map","getSelection","push","index","href","answer","AppRouter","isLoggedIn","exact","path","to","pathname","App","init","setInit","setUserAuth","onAuthStateChanged","user","uid","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.760e79d4.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDdKuvipqVEbHicVyXLDjx_frIUA0EHMsw\",\r\n  authDomain: \"myowndrawer-98874.firebaseapp.com\",\r\n  projectId: \"myowndrawer-98874\",\r\n  storageBucket: \"myowndrawer-98874.appspot.com\",\r\n  messagingSenderId: \"278557159432\",\r\n  appId: \"1:278557159432:web:ef028ac7dec9f98b35e1bd\",\r\n  measurementId: \"G-4ZY2ZWVK8V\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","const Apikeys = {\r\n    USER_ID: 'user_9Yzjv9HczozAI5LPmsW88',\r\n    SERVICE_ID: 'service_wd4vewg',\r\n    TEMPLATE_ID: 'template_8cqpfld'\r\n}\r\n\r\nexport default Apikeys","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { dbService } from \"../fBase\";\r\nimport emailjs from \"emailjs-com\"\r\nimport Apikeys from \"../ApiKeys\";\r\n\r\nconst Answer = () => {\r\n    const { id, questionid } = useParams();\r\n    const [questionInfo, setQuestionInfo] = useState({});\r\n    const [newAnswer, setNewAnswer] = useState(\"\");\r\n    const [instaID, setInstaID] = useState(\"익명\");\r\n    const [nickname, setNickname] = useState(\"익명\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        const prevArray = questionInfo.answerArray;\r\n        const newAnswerObj = {\r\n            answerContent: newAnswer,\r\n            instaID,\r\n            nickname\r\n        }\r\n        await dbService.collection(`${id}`).doc(`${questionInfo.question}`).update({\r\n            answerArray: [...prevArray, newAnswerObj]\r\n        }).then(() => {\r\n            alert(\"성공적으로 답장했습니다. 감사합니다.\")\r\n            emailjs.sendForm(Apikeys.SERVICE_ID, Apikeys.TEMPLATE_ID, e.target, Apikeys.USER_ID)\r\n            .then(result => {\r\n                console.log(\"Success\", result)\r\n            }).catch(error => {\r\n                console.log(\"Error\", error.text)\r\n            })\r\n        }).catch((error) => {\r\n            alert(\"무언가 문제가 생겼습니다. 스크린샷을 통해 알려주시면 감사하겠습니다. 감사합니다.\", error)\r\n        });\r\n        setNewAnswer(\"\");\r\n        setInstaID(\"익명\");\r\n        setNickname(\"익명\");\r\n    }\r\n\r\n    const onChange = e => {\r\n        const {target: {name, value}} = e;\r\n        if (name === \"answer\") {\r\n            setNewAnswer(value)\r\n        } else if (name === \"instagram\") {\r\n            setInstaID(value)\r\n        } else if (name === \"nickname\") {\r\n            setNickname(value)\r\n        }\r\n    }\r\n\r\n    const getQuestion = async () => {\r\n        await dbService.collection(`${id}`).where(\"id\", \"==\", questionid)\r\n        .get()\r\n        .then(querySnapshot => {\r\n            querySnapshot.forEach((doc) => {\r\n                setQuestionInfo(doc.data())\r\n                setIsLoading(true);\r\n            })\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getQuestion();\r\n    }, [])\r\n    return (\r\n        <div className=\"answer__container\">\r\n            {isLoading ? \r\n            <>\r\n                <h3 className=\"answer__title\">{questionInfo.question}</h3>\r\n                <form className=\"answer__form\" onSubmit={onSubmit}>\r\n                    <textarea className=\"answer__content\" type=\"text\" placeholder=\"대답을 적어주세요.\" name=\"answer\" onChange={onChange} value={newAnswer} required />\r\n                    <div className=\"answer__input-container\">\r\n                        <div className=\"answer__nickname-container\">\r\n                            <label className=\"answer__nickname-label\" htmlFor=\"nickname\">이름 : </label>\r\n                            <input className=\"answer__nickname-input\" type=\"text\" name=\"nickname\" placeholder=\"이름\" onChange={onChange} value={nickname} />\r\n                        </div>\r\n                        <div className=\"answer__instagram-container\">\r\n                        <label className=\"answer__instagram-label\" htmlFor=\"instagram\">인스타그램 ID : </label>\r\n                            <input className=\"answer__instagram-input\" type=\"text\" name=\"instagram\" placeholder=\"인스타 아이디\" onChange={onChange} value={instaID} />\r\n                        </div>\r\n                        <input className=\"answer__submit\" type=\"submit\" value=\"답장 보내기\"/>\r\n                    </div>\r\n                </form>\r\n            </>\r\n            : \"Loading...\" }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Answer;","import { authService } from \"../fBase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\")\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if (name === \"email\") {\r\n            setEmail(value)\r\n        } else if (name === \"password\"){\r\n            setPassword(value)\r\n        }\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            if (newAccount) {\r\n                await authService.createUserWithEmailAndPassword(\r\n                    email, \r\n                    password\r\n                );\r\n            } else {\r\n                await authService.signInWithEmailAndPassword(\r\n                    email, \r\n                    password\r\n                );\r\n            }\r\n        } catch (error) {\r\n            if (error.message === \"There is no user record corresponding to this identifier. The user may have been deleted.\") {\r\n                setError(\"입력하신 아이디가 없습니다.\")\r\n            } else {\r\n                setError(error.message)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev)\r\n    return (\r\n        <>\r\n            <div className=\"auth-form__container\">\r\n                <form className=\"auth-form\" onSubmit={onSubmit}>\r\n                    <input className=\"input auth__input\" name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange}/>\r\n                    <input className=\"input auth__input\" name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange}/>\r\n                    <input className=\"btn\" type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                    <span className=\"error\">{error}</span>\r\n                    <span className=\"change-btn\" onClick={toggleAccount}>\r\n                        {newAccount? \"Log In\" : \"Create Account\"}\r\n                    </span>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Auth;","import React from \"react\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>Home</div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Profile = ({userAuth}) => {\r\n    const history = useHistory();\r\n    const [question, setQuestion] = useState(\"\");\r\n    const [questions, setQuestions] = useState([]);\r\n    const [selection, setSelection] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { id } = useParams();\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const questionObj = {\r\n            question,\r\n            id: uuidv4(),\r\n            answerArray: [],\r\n            registered_dttm: Date.now(),\r\n            updated_dttm: 0,\r\n        }\r\n        await dbService.collection(`${userAuth}`).doc(`${question}`).set(questionObj)\r\n        setQuestion(\"\");\r\n    }\r\n\r\n    const onQuestionChange = e => {\r\n        const {target: {value}} = e;\r\n        setQuestion(value);\r\n    }\r\n\r\n    const onSelectChange = e => {\r\n        const {target: {value}} = e;\r\n        questions.map((question) => question.question === value && setSelection(question))\r\n    }\r\n\r\n    const getQuestions = async () => {\r\n        dbService.collection(`${userAuth}`)\r\n        .onSnapshot(snapshot => {\r\n            const questionsData = snapshot.docs.map((doc) => ({\r\n                id:doc.id,\r\n                ...doc.data(),\r\n            }))\r\n            setQuestions(questionsData)\r\n        })\r\n    }\r\n\r\n    const getSelection = async () => {\r\n        const question = await dbService.collection(`${userAuth}`).get()\r\n        setSelection(question.docs[0].data())\r\n        setIsLoading(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (id !== userAuth) {\r\n            history.push(`/${id}/a`)\r\n        }\r\n        getSelection();\r\n        getQuestions();\r\n    }, [])\r\n    return (\r\n        <div>\r\n            {isLoading ? \r\n            <>\r\n                <h3>프로필(질문 만들기)</h3>\r\n                <form onSubmit={onSubmit}>\r\n                <input type=\"text\" placeholder=\"질문\" onChange={onQuestionChange} value={question}/>\r\n                <input type=\"submit\" />\r\n                </form>\r\n                <div>\r\n                    <h5>질문 목록</h5>\r\n                    <select onChange={onSelectChange}>\r\n                        {questions.map((question, index) => {\r\n                            return (<option key={index}>{question.question}</option>)\r\n                        })}\r\n                    </select> <br />\r\n                    <a href={`http://localhost:3000/#/YGuWuFyRnEbojXt1J1SewSpDjkt2/${selection.id}`}>{selection.question} 답변 링크</a>\r\n                    <div><br />\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>글쓴이</th>\r\n                                <th>내용</th>\r\n                                <th>인스타 아이디</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {selection.answerArray.map((answer, index) => {\r\n                            return (\r\n                            <tr key={index}>\r\n                                <td>{answer.nickname}</td>\r\n                                <td>{answer.answerContent}</td>\r\n                                <td>{answer.instaID}</td>\r\n                            </tr>\r\n                            )\r\n                        })}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    </div>\r\n                </div>\r\n            </>\r\n            : \"Loading...\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\r\nimport Answer from \"../routes/Answer\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"../routes/Profile\";\r\n\r\nconst AppRouter = ({isLoggedIn, userAuth}) => {\r\n    return (\r\n        <>\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    {isLoggedIn ? <Redirect to={{\r\n                                            pathname: `/${userAuth}`\r\n                                            }} /> \r\n                    : <Home />}\r\n                </Route>\r\n                <Route exact path=\"/auth\">\r\n                    {isLoggedIn ? <Redirect to={{\r\n                                            pathname: `/${userAuth}`\r\n                                            }} /> \r\n                    : <Auth />}\r\n                </Route>\r\n                <Route exact path=\"/:id\">\r\n                    <Profile userAuth={userAuth}/>\r\n                </Route>\r\n                <Route exact path=\"/:id/:questionid\">\r\n                    <Answer userAuth={userAuth}/>\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport { authService } from \"../fBase\";\nimport AppRouter from \"./Routes\";\n\nconst App = () => {\n  const [init, setInit] = useState(false);\n  const [userAuth, setUserAuth] = useState(\"anonymous\");\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserAuth(user.uid)\n      }\n      setInit(true);\n    })\n\n  });\n  return (\n    <>\n      {init ? <AppRouter isLoggedIn={Boolean(userAuth)} userAuth={userAuth} /> : \"Loading...\"}\n    </>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App\"\nimport \"./Styles.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}
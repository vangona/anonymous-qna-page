{"version":3,"sources":["../node_modules/java/lib sync","fBase.js","ApiKeys.js","components/LoginModal.js","components/Modal.js","routes/Answer.js","routes/Auth.js","routes/Detail.js","routes/Home.js","routes/Profile.js","components/Wordcloud.js","components/Routes.js","components/App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","authService","auth","dbService","firestore","storage","Apikeys","USER_ID","SERVICE_ID","TEMPLATE_ID","LoginModal","setLoginModal","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","history","useHistory","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","push","className","type","placeholder","required","onClick","prev","icon","faExchangeAlt","Modal","content","setModalState","Answer","useParams","questionid","questionInfo","setQuestionInfo","newAnswer","setNewAnswer","instaID","setInstaID","nickname","setNickname","backgroundColor","setBackgroundColor","font","setFont","fontStyle","setFontStyle","isLoading","setIsLoading","loginModal","copyState","setCopyState","location","useLocation","prevArray","answerArray","newAnswerObj","answerContent","collection","doc","question","update","then","alert","emailjs","sendForm","result","console","log","catch","text","getQuestion","where","get","querySnapshot","forEach","data","style","useEffect","state","copy","setTimeout","fontFamily","htmlFor","Auth","Detail","userAuth","setQuestion","setAnswer","getDetail","updated_dttm","Date","now","Home","to","Profile","selectionToDel","questions","setQuestions","selection","setSelection","modalState","questionObj","uuidv4","registered_dttm","set","onDeleteAnswer","window","confirm","splice","onClickAnswer","getQuestions","onSnapshot","snapshot","questionsData","docs","map","getSelection","width","length","index","tempElem","document","createElement","body","appendChild","protocol","host","select","execCommand","removeChild","pathname","answer","slice","delete","signOut","Wordcloud","end","words","d3","append","attr","selectAll","enter","d","size","x","y","rotate","cloud","Math","random","test","padding","fontSize","on","start","makeCloud","AppRouter","isLoggedIn","exact","path","stete","App","init","setInit","setUserAuth","setIsLoggedIn","onAuthStateChanged","user","uid","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d450d3c3.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 595;","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDdKuvipqVEbHicVyXLDjx_frIUA0EHMsw\",\r\n  authDomain: \"myowndrawer-98874.firebaseapp.com\",\r\n  projectId: \"myowndrawer-98874\",\r\n  storageBucket: \"myowndrawer-98874.appspot.com\",\r\n  messagingSenderId: \"278557159432\",\r\n  appId: \"1:278557159432:web:ef028ac7dec9f98b35e1bd\",\r\n  measurementId: \"G-4ZY2ZWVK8V\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","const Apikeys = {\r\n    USER_ID: 'user_9Yzjv9HczozAI5LPmsW88',\r\n    SERVICE_ID: 'service_wd4vewg',\r\n    TEMPLATE_ID: 'template_8cqpfld'\r\n}\r\n\r\nexport default Apikeys","import { faExchangeAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { authService } from \"../fBase\";\r\n\r\nconst LoginModal = ({setLoginModal}) => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\")\r\n    const history = useHistory();\r\n\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if (name === \"email\") {\r\n            setEmail(value)\r\n        } else if (name === \"password\"){\r\n            setPassword(value)\r\n        }\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            if (newAccount) {\r\n                await authService.createUserWithEmailAndPassword(\r\n                    email, \r\n                    password\r\n                );\r\n            } else {\r\n                await authService.signInWithEmailAndPassword(\r\n                    email, \r\n                    password\r\n                );\r\n            }\r\n        } catch (error) {\r\n            if (error.message === \"There is no user record corresponding to this identifier. The user may have been deleted.\") {\r\n                setError(\"입력하신 아이디가 없습니다.\")\r\n            } else {\r\n                setError(error.message)\r\n            }\r\n        }\r\n        history.push(\"/\")\r\n    }\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev)\r\n   \r\n    const onClickClose = () => {\r\n        setLoginModal(false)\r\n    }\r\n    \r\n    return (\r\n        <div className=\"login-modal__background\">\r\n            <div className=\"login-modal__container\">\r\n                <h3 className=\"login-modal__title\">{ newAccount ? \"회원가입\" : \"로그인\"}</h3>\r\n                    <form className=\"auth-form\" onSubmit={onSubmit}>\r\n                        <div className=\"auth-form__component\">\r\n                            <label className=\"modal-auth__title\">E-mail</label>\r\n                            <input className=\"input auth__input\" name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange}/>\r\n                        </div>\r\n                        <div className=\"auth-form__component\">\r\n                            <label className=\"modal-auth__title\">Password</label>\r\n                            <input className=\"input auth__input\" name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange}/>\r\n                        </div>\r\n                        <div className=\"auth-form__btn\">\r\n                            <input className=\"btn\" type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                            <span className=\"error\">{error}</span>\r\n                            <span className=\"change-btn\" onClick={toggleAccount}>\r\n                                <FontAwesomeIcon icon={faExchangeAlt} /> { newAccount \r\n                                ? \"Log In\" \r\n                                : \"Create Account\" }\r\n                            </span>\r\n                        </div>\r\n                    </form>\r\n                <span onClick={onClickClose} className=\"modal__close-btn\">X</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginModal;","import React from \"react\";\r\n\r\nconst Modal = ({content, setModalState}) => {\r\n    const onBackgroundClick = () => {\r\n        setModalState(false)\r\n    }\r\n    return (\r\n        <div onClick={onBackgroundClick} className=\"modal-background\">\r\n            <div className=\"modal-container\">\r\n                <span>{content}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport { dbService } from \"../fBase\";\r\nimport emailjs from \"emailjs-com\"\r\nimport Apikeys from \"../ApiKeys\";\r\nimport LoginModal from \"../components/LoginModal\";\r\nimport Modal from \"../components/Modal\";\r\n\r\nconst Answer = () => {\r\n    const { id, questionid } = useParams();\r\n    const [questionInfo, setQuestionInfo] = useState({});\r\n    const [newAnswer, setNewAnswer] = useState(\"\");\r\n    const [instaID, setInstaID] = useState(\"익명\");\r\n    const [nickname, setNickname] = useState(\"익명\");\r\n    const [backgroundColor, setBackgroundColor] = useState(\"\");\r\n    const [font, setFont] = useState(\"\");\r\n    const [fontStyle, setFontStyle] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [loginModal, setLoginModal] = useState(false);\r\n    const [copyState, setCopyState] = useState(false);\r\n    const location = useLocation();\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        const prevArray = questionInfo.answerArray;\r\n        const newAnswerObj = {\r\n            answerContent: newAnswer,\r\n            instaID,\r\n            nickname\r\n        }\r\n        await dbService.collection(`${id}`).doc(`${questionInfo.question}`).update({\r\n            answerArray: [...prevArray, newAnswerObj]\r\n        }).then(() => {\r\n            alert(\"성공적으로 답장했습니다. 감사합니다.\")\r\n            setNewAnswer(\"\");\r\n            setInstaID(\"익명\");\r\n            setNickname(\"익명\");\r\n            emailjs.sendForm(Apikeys.SERVICE_ID, Apikeys.TEMPLATE_ID, e.target, Apikeys.USER_ID)\r\n            .then(result => {\r\n                console.log(\"Success\", result)\r\n            }).catch(error => {\r\n                console.log(\"Error\", error.text)\r\n            })\r\n        }).catch((error) => {\r\n            alert(\"무언가 문제가 생겼습니다. 스크린샷을 통해 알려주시면 감사하겠습니다. 감사합니다.\", error)\r\n        });\r\n    }\r\n\r\n    const onChange = e => {\r\n        const {target: {name, value}} = e;\r\n        if (name === \"answer\") {\r\n            setNewAnswer(value)\r\n        } else if (name === \"instagram\") {\r\n            setInstaID(value)\r\n        } else if (name === \"nickname\") {\r\n            setNickname(value)\r\n        }\r\n    }\r\n\r\n    const onCreateAccountClick = e => {\r\n        e.preventDefault();\r\n        const answerContainer = document.querySelector(\".answer__container\")\r\n        setLoginModal(true)\r\n    }\r\n\r\n    const getQuestion = async () => {\r\n        await dbService.collection(`${id}`).where(\"id\", \"==\", questionid)\r\n        .get()\r\n        .then(querySnapshot => {\r\n            querySnapshot.forEach((doc) => {\r\n                setQuestionInfo(doc.data())\r\n                if (doc.data().style) {\r\n                    setBackgroundColor(doc.data().style.backgroundColor)\r\n                    setFont(doc.data().style.font)\r\n                    setFontStyle(doc.data().style.fontStyle)\r\n                }\r\n                setIsLoading(true);\r\n            })\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getQuestion();\r\n        if (location.state) {\r\n            const {state: { copy }} = location;\r\n            setCopyState(copy)\r\n            setTimeout(() => {setCopyState(false)}, 1000)\r\n        }\r\n    }, [])\r\n    return (\r\n        <div style={{backgroundColor: backgroundColor}} className=\"answer__container\">\r\n            {isLoading ? \r\n            <>\r\n                <h3  style={{fontStyle: fontStyle, fontFamily: font}}  className=\"answer__title\">{questionInfo.question}</h3>\r\n                <form className=\"answer__form\" onSubmit={onSubmit}>\r\n                    <textarea className=\"answer__content\" type=\"text\" placeholder=\"대답을 적어주세요.\" name=\"answer\" onChange={onChange} value={newAnswer} required />\r\n                    <div className=\"answer__input-container\">\r\n                        <div className=\"answer__nickname-container\">\r\n                            <label className=\"answer__nickname-label\" htmlFor=\"nickname\">이름 : </label>\r\n                            <input className=\"answer__nickname-input\" type=\"text\" name=\"nickname\" placeholder=\"이름\" onChange={onChange} value={nickname} />\r\n                        </div>\r\n                        <div className=\"answer__instagram-container\">\r\n                        <label className=\"answer__instagram-label\" htmlFor=\"instagram\">인스타그램 ID : </label>\r\n                            <input className=\"answer__instagram-input\" type=\"text\" name=\"instagram\" placeholder=\"인스타 아이디\" onChange={onChange} value={instaID} />\r\n                        </div>\r\n                        <input className=\"answer__submit\" type=\"submit\" value=\"답장 하기\"/>\r\n                    </div>\r\n                </form>\r\n                {/* <button onClick={onCreateAccountClick}>나도 질문 만들러 가기</button> */}\r\n                {copyState && <Modal content={\"클립보드에 링크가 복사되었습니다.\"}/>}\r\n                {loginModal && <LoginModal setLoginModal={setLoginModal}/>}\r\n            </>\r\n            : \"Loading...\" }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Answer;","import { faExchangeAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { authService } from \"../fBase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\")\r\n    const history = useHistory();\r\n\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if (name === \"email\") {\r\n            setEmail(value)\r\n        } else if (name === \"password\"){\r\n            setPassword(value)\r\n        }\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            if (newAccount) {\r\n                await authService.createUserWithEmailAndPassword(\r\n                    email, \r\n                    password\r\n                );\r\n            } else {\r\n                await authService.signInWithEmailAndPassword(\r\n                    email, \r\n                    password\r\n                );\r\n            }\r\n        } catch (error) {\r\n            if (error.message === \"There is no user record corresponding to this identifier. The user may have been deleted.\") {\r\n                setError(\"입력하신 아이디가 없습니다.\")\r\n            } else {\r\n                setError(error.message)\r\n            }\r\n        }\r\n        history.push(\"/\")\r\n    }\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev)\r\n\r\n    return (\r\n        <div className=\"auth__container\">\r\n            <h3 className=\"auth__title\">무엇이든 물어보세요</h3>\r\n            <div className=\"auth-form__container\">\r\n                <form className=\"auth-form\" onSubmit={onSubmit}>\r\n                    <div className=\"auth-form__component\">\r\n                        <label className=\"auth-form__title\">E-mail</label>\r\n                        <input className=\"input auth__input\" name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange}/>\r\n                    </div>\r\n                    <div className=\"auth-form__component\">\r\n                        <label className=\"auth-form__title\">Password</label>\r\n                        <input className=\"input auth__input\" name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange}/>\r\n                    </div>\r\n                    <div className=\"auth-form__btn\">\r\n                        <input className=\"btn\" type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                        <span className=\"error\">{error}</span>\r\n                        <span className=\"change-btn\" onClick={toggleAccount}>\r\n                            <FontAwesomeIcon icon={faExchangeAlt} /> { newAccount \r\n                            ? \"Log In\" \r\n                            : \"Create Account\" }\r\n                        </span>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth;","import React, { useEffect, useState } from \"react\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Detail = ({userAuth}) => {\r\n    const { id, questionid } = useParams();\r\n    const [question, setQuestion] = useState(\"\");\r\n    const [answer, setAnswer] = useState(\"\");\r\n    const [backgroundColor, setBackgroundColor] = useState(\"\");\r\n    const [font, setFont] = useState(\"\");\r\n    const [fontStyle, setFontStyle] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        dbService.collection(`${id}`).doc(`${question.question}`)\r\n        .update({\r\n            style: {\r\n                font,\r\n                fontStyle,\r\n                backgroundColor,\r\n            },\r\n            updated_dttm: Date.now()\r\n        });\r\n        alert(\"성공적으로 변경되었습니다.\");\r\n    }\r\n\r\n    const onBgColorChange = e => {\r\n        const {target: {value}} = e;\r\n        setBackgroundColor(value);\r\n    }\r\n\r\n    const onFontChange = e => {\r\n        const {target: {value}} = e;\r\n        setFont(value);\r\n    }\r\n\r\n    const onFontStyleChange = e => {\r\n        const {target: {value}} = e;\r\n        setFontStyle(value);\r\n    }\r\n\r\n    const getDetail = async () => {\r\n        await dbService.collection(`${id}`).where(\"id\", \"==\", questionid)\r\n        .get()\r\n        .then(querySnapshot => {\r\n            querySnapshot.forEach((doc) => {\r\n                setQuestion(doc.data())\r\n                setAnswer(doc.data().answerArray)\r\n                if (doc.data().style) {\r\n                    setBackgroundColor(doc.data().style.backgroundColor)\r\n                    setFont(doc.data().style.font)\r\n                    setFontStyle(doc.data().style.fontStyle)\r\n                }\r\n                setIsLoading(true);\r\n            })\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if ( id !== userAuth ) {\r\n            <Redirect to=\"/\" />\r\n        }\r\n        getDetail();\r\n    }, [])\r\n    return (\r\n        <div style={{backgroundColor: backgroundColor}} className=\"answer__container\">\r\n        {isLoading ? \r\n        <>\r\n            <h3 style={{fontStyle: fontStyle, fontFamily: font}} className=\"answer__title\">{question.question}</h3>\r\n            <form onSubmit={onSubmit} className=\"answer__form\">\r\n                <textarea className=\"answer__content\" type=\"text\" placeholder=\"대답을 적어주세요.\" name=\"answer\" />\r\n                <div className=\"answer__input-container\">\r\n                    <div className=\"answer__nickname-container\">\r\n                        <label className=\"answer__nickname-label\" htmlFor=\"nickname\">질문 폰트 : </label>\r\n                        <select onChange={onFontChange} value={font}>\r\n                            <option value=\"sans-serif\">sans-serif</option>\r\n                            <option value=\"serif\">serif</option>\r\n                        </select>\r\n                        <select onChange={onFontStyleChange} value={fontStyle}>\r\n                            <option value=\"normal\">normal</option>\r\n                            <option value=\"italic\">italic</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"answer__instagram-container\">\r\n                    <label className=\"answer__instagram-label\" htmlFor=\"instagram\">배경 색상 : </label>\r\n                        <input onChange={onBgColorChange} type=\"color\" value={backgroundColor}/>\r\n                    </div>\r\n                    <input className=\"answer__submit\" type=\"submit\" value=\"저장 하기\"/>\r\n                </div>\r\n            </form>\r\n        </>\r\n        : \"Loading...\" }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Detail;","import { Link } from \"react-router-dom\"\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n        <div>Home</div>\r\n        <Link to=\"/auth\">로그인</Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\nimport Modal from \"../components/Modal\";\r\nimport { authService, dbService } from \"../fBase\";\r\n\r\nconst Profile = ({userAuth}) => {\r\n    const history = useHistory();\r\n    const [question, setQuestion] = useState(\"\");\r\n    const [questions, setQuestions] = useState([]);\r\n    const [selection, setSelection] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modalState, setModalState] = useState(false);\r\n    const { id } = useParams();\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const questionObj = {\r\n            question,\r\n            id: uuidv4(),\r\n            answerArray: [],\r\n            registered_dttm: Date.now(),\r\n            updated_dttm: 0,\r\n        }\r\n        await dbService.collection(`${userAuth}`).doc(`${question}`).set(questionObj)\r\n        setSelection(questionObj)\r\n        setQuestion(\"\");\r\n    }\r\n\r\n    const onQuestionChange = e => {\r\n        const {target: {value}} = e;\r\n        setQuestion(value);\r\n    }\r\n\r\n    const onSelectChange = e => {\r\n        const {target: {value}} = e;\r\n        questions.map((question) => question.question === value && setSelection(question))\r\n    }\r\n\r\n    const onLinkClick = (e) => {\r\n        e.preventDefault();\r\n        const tempElem = document.createElement('input')\r\n        document.body.appendChild(tempElem)\r\n        tempElem.value = `${window.location.protocol}//${window.location.host}/qna_page/#/${userAuth}/${selection.id}`\r\n        tempElem.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(tempElem)\r\n        history.push({\r\n            pathname: `/${userAuth}/${selection.id}`,\r\n            state: {copy : true}            \r\n        })\r\n    }\r\n\r\n    const onLogOut = (e) => {\r\n        e.preventDefault();\r\n        authService.signOut();\r\n        history.push(\"/\")\r\n    }\r\n\r\n    const onDeleteAnswer = id => {\r\n        return function () {\r\n            if (window.confirm(\"정말 해당 답변을 삭제하시겠습니까?\")) {\r\n                selection.answerArray.splice(id, 1)\r\n                dbService.collection(`${userAuth}`).doc(`${selection.question}`)\r\n                .update({\r\n                    answerArray : selection.answerArray\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const onDeleteQuestion = selectionToDel => {\r\n        return function () {\r\n            if (window.confirm(\"정말 해당 질문을 삭제하시겠습니까? \\n 포함된 답변들도 모두 삭제됩니다.\")) {\r\n                dbService.collection(`${userAuth}`).doc(`${selectionToDel.question}`).delete();\r\n                getSelection();\r\n            }\r\n        }\r\n    }\r\n\r\n    const onClickAnswer = e => {\r\n        setModalState(true);\r\n    };\r\n\r\n    const getQuestions = async () => {\r\n        dbService.collection(`${userAuth}`)\r\n        .onSnapshot(snapshot => {\r\n            const questionsData = snapshot.docs.map((doc) => ({\r\n                id:doc.id,\r\n                ...doc.data(),\r\n            }))\r\n            setQuestions(questionsData)\r\n        })\r\n    }\r\n\r\n    const getSelection = async () => {\r\n        const question = await dbService.collection(`${userAuth}`)\r\n        .get()\r\n        if (question.docs[0]) {\r\n            setSelection(question.docs[0].data())\r\n        }\r\n        setIsLoading(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (id !== userAuth) {\r\n            history.push('/auth')\r\n        } else {\r\n            getSelection();\r\n            getQuestions();\r\n        }\r\n    }, [userAuth])\r\n\r\n    return (\r\n        <div className=\"profile__container\">\r\n            {isLoading ? \r\n            <>\r\n                <h3 className=\"profile__title\">질문 만들기</h3>\r\n                <form onSubmit={onSubmit} className=\"question__form\">\r\n                    <input className=\"question__text\" type=\"text\" placeholder=\"질문\" onChange={onQuestionChange} value={question}/>\r\n                    <input className=\"question__submit\" type=\"submit\" value=\"질문 만들기\"/>\r\n                </form>\r\n                <hr style={{width: \"80%\"}}/><br />\r\n                <div className=\"profile__answer-container\">\r\n                    { questions ? questions.length !== 0 &&\r\n                        <>\r\n                            <h5>질문 관리 & 답변 보기</h5>\r\n                            <select className=\"question-pages\" onChange={onSelectChange} value={selection.question}>\r\n                                {questions.map((question, index) => {\r\n                                    return (<option key={index}>{question.question}</option>)\r\n                                })}\r\n                            </select>\r\n                            <button onClick={onLinkClick} className=\"answer-page__link btn\" >답변 링크 공유하기</button>\r\n                            {selection.answerArray ? selection.answerArray.length !== 0 &&\r\n                        <>\r\n                            <table className=\"answer__table-container\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>내용</th>\r\n                                        <th>이름</th>\r\n                                        <th>삭제</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody  className=\"answer__table-body\">                                \r\n\r\n                                {selection.answerArray.map((answer, index) => {\r\n                                    return (\r\n                                        <>\r\n                                            <tr>\r\n                                                <td onClick={onClickAnswer} className=\"answer__table-content\">{answer.answerContent.length > 15 ? answer.answerContent.slice(0, 15) + \"...\" : answer.answerContent}</td>\r\n                                                <td>{answer.nickname}</td>\r\n                                                <td><button onClick={onDeleteAnswer(index)}>X</button></td>\r\n                                            </tr>\r\n                                            {modalState && <Modal content={answer.answerContent} setModalState={setModalState} />}\r\n                                        </>\r\n                                    )\r\n                                })}\r\n                                </tbody>\r\n                            </table><br />\r\n                        </>\r\n                        : null\r\n                        }\r\n                            <div className=\"profile__button-container\">\r\n                            <Link className=\"question-page__link\" to={`/${userAuth}/${selection.id}/custom`}><button className=\"btn\">답변 페이지 커스텀</button></Link>\r\n                            { questions ? questions.length !== 0 &&\r\n                            <button className=\"btn\" onClick={onDeleteQuestion(selection)}>질문 삭제하기</button>\r\n                            : null\r\n                            }\r\n                            </div>\r\n                        </>\r\n                    : null\r\n                    }\r\n                </div>\r\n                <br />\r\n                <div className=\"profile__button-container\">\r\n                    <button className=\"btn\" onClick={onLogOut}>로그아웃</button>\r\n                </div>\r\n            </>\r\n            : \"Loading...\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, { useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport cloud from \"d3-cloud\";\r\nimport { KMR, KKMA } from \"koalanlp/API\";\r\nimport { initialize } from 'koalanlp/Util';\r\nimport { Tagger, Parser } from 'koalanlp/proc';\r\n\r\nconst Wordcloud = () => {\r\n  \r\n  // const getData = async () => {\r\n  //   await initialize({packages: {KMR: '2.0.4', KKMA: '2.0.4'}, verbose: true})\r\n  // }\r\n\r\n  const end = (words) => {\r\n    d3.select(\"#word-cloud\")\r\n        .append(\"svg\")\r\n        .attr(\"width\", 500)\r\n        .attr(\"height\", 500)\r\n        .style(\"border\", \"1px solid black\")\r\n      .append(\"g\")\r\n        .attr(\"transform\", \"translate(\" + 500 / 2 + \",\" + 500 / 2 + \")\")\r\n      .selectAll(\"text\")\r\n        .data(words)\r\n      .enter().append(\"text\")\r\n        .style(\"font-size\", function(d) { return d.size + \"px\"; })\r\n        .style(\"font-family\", \"Impact\")\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .attr(\"transform\", function(d) {\r\n          return \"translate(\" + [d.x, d.y] + \")rotate(\" + d.rotate + \")\";\r\n        })\r\n        .text(function(d) { return d.text; });\r\n  }\r\n\r\n    const makeCloud = data => {\r\n      cloud()\r\n      .size([400, 400])\r\n      .words(data.map(function(d) {\r\n          return {text: d, size: 10 + Math.random() * 90, test: \"haha\"};\r\n      }))\r\n      .padding(5)\r\n      .font(\"Impact\")\r\n      .fontSize(function(d) { return d.size; })\r\n      .on(\"end\", end)\r\n      .start();\r\n    }\r\n\r\n  useEffect(() => {\r\n    // getData();\r\n    const data = [\r\n        \"Hello\", \"world\", \"normally\", \"you\", \"want\", \"more\", \"words\",\r\n        \"than\", \"this\"]\r\n    makeCloud(data)\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <h1>리뷰 분석 결과</h1>\r\n      <div id=\"word-cloud\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Wordcloud;","import React, { useEffect } from \"react\";\r\nimport { HashRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\r\nimport Answer from \"../routes/Answer\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Detail from \"../routes/Detail\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"../routes/Profile\";\r\nimport Wordcloud from \"./Wordcloud\";\r\n\r\nconst AppRouter = ({isLoggedIn, userAuth}) => {\r\n    useEffect(()=>{\r\n        console.log(isLoggedIn)\r\n    })\r\n    return (\r\n        <>\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    {isLoggedIn ? <Redirect to={{\r\n                                            pathname: `/${userAuth}`,\r\n                                            stete: {userAuth}\r\n                                            }} /> \r\n                    : <Home />}\r\n                </Route>\r\n                <Route exact path=\"/auth\">\r\n                    {isLoggedIn ? <Redirect to={{\r\n                                            pathname: `/${userAuth}`,\r\n                                            stete: {userAuth}\r\n                                            }} /> \r\n                    : <Auth />}\r\n                </Route>\r\n                <Route exact path=\"/logout\">\r\n                    <Home />\r\n                </Route>\r\n                <Route exact path=\"/:id\">\r\n                    <Profile userAuth={userAuth}/>\r\n                </Route>\r\n                <Route exact path=\"/:id/wordcloud\">\r\n                    <Wordcloud />\r\n                </Route>\r\n                <Route exact path=\"/:id/:questionid\">\r\n                    <Answer userAuth={userAuth}/>\r\n                </Route>\r\n                <Route exact path=\"/:id/:questionid/custom\">\r\n                    <Detail userAuth={userAuth}/>\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport { authService } from \"../fBase\";\nimport AppRouter from \"./Routes\";\n\nconst App = () => {\n  const [init, setInit] = useState(false);\n  const [userAuth, setUserAuth] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserAuth(user.uid)\n        setIsLoggedIn(true)\n      } else {\n        setUserAuth(\"\")\n        setIsLoggedIn(false)\n      }\n      setInit(true);\n    })\n  }, []);\n  return (\n    <>\n      {init ? <AppRouter isLoggedIn={isLoggedIn} userAuth={userAuth} /> : \"Loading...\"}\n    </>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App\"\nimport \"./Styles.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}